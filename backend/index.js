// backend/index.js
const express = require('express');
const bodyParser = require('body-parser');
const TelegramBot = require('node-telegram-bot-api');

const TOKEN = process.env.TOKEN;
const GROUP_ID = process.env.GROUP_ID;
const URL = process.env.URL;
const PORT = process.env.PORT || 10000;

if (!TOKEN || !GROUP_ID || !URL) {
  console.error('ERROR: TOKEN, GROUP_ID –∏–ª–∏ URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  process.exit(1);
}

const app = express();
app.use(bodyParser.json());

const bot = new TelegramBot(TOKEN, { webHook: true });
bot.setWebHook(`${URL}/bot${TOKEN}`);

let reminders = [];

// ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "üìÖ Open App" –≤ –º–µ–Ω—é –±–æ—Ç–∞
bot.setChatMenuButton({
  menu_button: {
    type: "web_app",
    text: "üìÖ Open App",
    web_app: { url: URL }
  }
});

// Webhook endpoint
app.post(`/bot${TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –∫–∞–ª–µ–Ω–¥–∞—Ä—å-–±–æ—Ç. –î–æ–±–∞–≤–ª—è–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!');
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
bot.onText(/\/add (.+)/, (msg, match) => {
  const text = match[1];
  const time = Date.now() + 60000; // —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
  reminders.push({ text, time, sent: false });
  bot.sendMessage(msg.chat.id, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ "${text}" –¥–æ–±–∞–≤–ª–µ–Ω–æ!`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
setInterval(() => {
  const now = Date.now();
  reminders.forEach(r => {
    if (!r.sent && r.time <= now) {
      bot.sendMessage(GROUP_ID, `‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${r.text}`);
      r.sent = true;
    }
  });
}, 10000);

// –°–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
bot.onText(/\/list/, (msg) => {
  if (!reminders.length) return bot.sendMessage(msg.chat.id, '–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.');
  const list = reminders.map(r => `${r.sent ? '‚úÖ' : 'üïí'} ${r.text}`).join('\n');
  bot.sendMessage(msg.chat.id, list);
});

// –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–ø–∏—Å–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
app.get("/", (req, res) => {
  if (!reminders.length) {
    return res.send("<h2>–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π</h2>");
  }

  const upcoming = reminders.filter(r => !r.sent);
  const done = reminders.filter(r => r.sent);

  res.send(`
    <html>
      <head>
        <title>Telegram Calendar</title>
        <style>
          body { font-family: sans-serif; padding: 20px; background: #f9f9f9; }
          h2 { color: #333; }
          ul { list-style: none; padding: 0; }
          li { background: white; margin: 5px 0; padding: 10px; border-radius: 6px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
          .done { color: green; }
          .upcoming { color: orange; }
        </style>
      </head>
      <body>
        <h2>–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</h2>
        <ul>
          ${upcoming.map(r => `<li class="upcoming">üïí ${r.text}</li>`).join("") || "<li>–ù–µ—Ç</li>"}
        </ul>
        <h2>–°–æ—Å—Ç–æ—è–≤—à–∏–µ—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</h2>
        <ul>
          ${done.map(r => `<li class="done">‚úÖ ${r.text}</li>`).join("") || "<li>–ù–µ—Ç</li>"}
        </ul>
      </body>
    </html>
  `);
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
